---
- hosts: all
  become: yes
  gather_facts: true
  tasks:
    - name: setting the facts
      ansible.builtin.set_fact:
        reboot_time: ""
        server_name: "{{ inventory_hostname }}"
        server_domain: "{{ ansible_domain }}"
        server_interface: "{{ ansible_interfaces | to_nice_yaml }}"
        distribution: "{{ ansible_distribution }}"
        release: "{{ ansible_distribution_release }}"
        distribution_version: "{{ ansible_distribution_version }}"
        kernel: "{{ ansible_kernel }}"
        architecture: "{{ ansible_architecture }}"
        RAM: "{{ ansible_memtotal_mb }}"
        CPU: "{{ ansible_processor | to_nice_yaml }}"
        CPUCORE: "{{ ansible_processor_cores }}"

    - name: reboot time
      ansible.builtin.command: who -b
      register: reboottime

    - name: setting reboot time
      ansible.builtin.set_fact:
        reboot_time: "{{ reboottime.stdout }}"
      when: reboottime.rc ==0

    - name: Top five memory hogging process
      ansible.builtin.shell: ps -eo pmem,pid,ppid,user,stat,args --sort=-pmem|grep -v $$|head -6|sed 's/$/\n/'
      register: memtop

    - name: debug
      ansible.builtin.debug:
        msg: "{{ memtop.stdout_lines }}"

    - name: Top five cpu hogging process
      ansible.builtin.shell: ps -eo pcpu,pid,ppid,user,stat,args --sort=-pcpu|grep -v $$|head -6|sed 's/$/\n/'
      register: cputop

    - name: debug
      ansible.builtin.debug:
        msg: "{{ cputop.stdout_lines }}"

    - name: uptime
      ansible.builtin.command: uptime -p
      register: timedtl

    - name: debug
      ansible.builtin.debug:
        msg: "{{ timedtl.stdout_lines }}"
